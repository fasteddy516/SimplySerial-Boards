name: Update Boards JSON

on:
  workflow_dispatch:  # Allows manual trigger from GitHub Actions UI
  # schedule:
  #   - cron: "0 0 * * 1"  # Runs at 00:00 UTC every Monday (DISABLED)

jobs:
  update-boards:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Dependencies
        run: pip install --upgrade pip

      - name: Fetch Latest Released boards.json as released_boards.json
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          echo "Fetching latest release tag..."
          LATEST_RELEASE=$(curl -s -H "Authorization: token $GH_PAT" \
            https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name // empty')

          if [ -z "$LATEST_RELEASE" ]; then
            echo "No previous release found. Proceeding without downloading boards.json."
            exit 0
          fi

          echo "Latest release found: $LATEST_RELEASE"
          
          ASSET_URL=$(curl -s -H "Authorization: token $GH_PAT" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/$LATEST_RELEASE | jq -r '.assets[]? | select(.name=="boards.json") | .browser_download_url // empty')

          if [ -z "$ASSET_URL" ]; then
            echo "No boards.json found in the latest release. Proceeding without it."
            exit 0
          fi

          echo "Downloading latest boards.json from $ASSET_URL"
          curl -L -H "Authorization: token $GH_PAT" -o released_boards.json "$ASSET_URL"

      - name: Run Update Script and Determine Changes
        id: run_update
        run: python update.py

      - name: Check if boards.json Exists
        run: |
          if [ ! -f boards.json ]; then
            echo "boards.json not found. Exiting..."
            exit 1
          fi

      - name: Extract Version from boards.json
        run: echo "TAG_NAME=$(jq -r '.version' boards.json | sed 's/[:T]/-/g' | sed 's/Z//g')" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        if: env.CHANGES_DETECTED == 'true'
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: "Boards JSON - ${{ env.TAG_NAME }}"
          body: "Automatically generated `boards.json` update."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Upload boards.json to Release
        uses: softprops/action-gh-release@v2
        if: env.CHANGES_DETECTED == 'true'
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: boards.json
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
